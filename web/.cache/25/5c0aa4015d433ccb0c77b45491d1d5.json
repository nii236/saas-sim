{"id":"../node_modules/@react-spring/shared/colorToRgba.js","dependencies":[{"name":"/home/nii236/git/saas-sim/web/node_modules/@react-spring/shared/colorToRgba.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/nii236/git/saas-sim/web/package.json","includedInParent":true,"mtime":1568516185396},{"name":"/home/nii236/git/saas-sim/web/.babelrc","includedInParent":true,"mtime":1568432620934},{"name":"/home/nii236/git/saas-sim/web/node_modules/@react-spring/shared/package.json","includedInParent":true,"mtime":1568466948987},{"name":"./normalizeColor","loc":{"line":3,"column":31},"parent":"/home/nii236/git/saas-sim/web/node_modules/@react-spring/shared/colorToRgba.js","resolved":"/home/nii236/git/saas-sim/web/node_modules/@react-spring/shared/normalizeColor.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar normalizeColor_1 = require(\"./normalizeColor\");\nfunction colorToRgba(input) {\n    var int32Color = normalizeColor_1.normalizeColor(input);\n    if (int32Color === null)\n        return input;\n    int32Color = int32Color || 0;\n    var r = (int32Color & 0xff000000) >>> 24;\n    var g = (int32Color & 0x00ff0000) >>> 16;\n    var b = (int32Color & 0x0000ff00) >>> 8;\n    var a = (int32Color & 0x000000ff) / 255;\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\nexports.colorToRgba = colorToRgba;\n"},"sourceMaps":{"js":{"version":3,"file":"colorToRgba.js","sourceRoot":"","sources":["../src/colorToRgba.ts"],"names":[],"mappings":";;AAAA,mDAAiD;AAEjD,SAAgB,WAAW,CAAC,KAAa;IACvC,IAAI,UAAU,GAAG,+BAAc,CAAC,KAAK,CAAC,CAAA;IACtC,IAAI,UAAU,KAAK,IAAI;QAAE,OAAO,KAAK,CAAA;IACrC,UAAU,GAAG,UAAU,IAAI,CAAC,CAAA;IAC5B,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,CAAA;IACxC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,CAAA;IACxC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,CAAA;IACvC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,GAAG,CAAA;IACvC,OAAO,UAAQ,CAAC,UAAK,CAAC,UAAK,CAAC,UAAK,CAAC,MAAG,CAAA;AACvC,CAAC;AATD,kCASC","sourcesContent":["import { normalizeColor } from './normalizeColor'\n\nexport function colorToRgba(input: string) {\n  let int32Color = normalizeColor(input)\n  if (int32Color === null) return input\n  int32Color = int32Color || 0\n  let r = (int32Color & 0xff000000) >>> 24\n  let g = (int32Color & 0x00ff0000) >>> 16\n  let b = (int32Color & 0x0000ff00) >>> 8\n  let a = (int32Color & 0x000000ff) / 255\n  return `rgba(${r}, ${g}, ${b}, ${a})`\n}\n"]}},"error":null,"hash":"cf8cb73a00ff0638bf25f67f321a806b","cacheData":{"env":{}}}