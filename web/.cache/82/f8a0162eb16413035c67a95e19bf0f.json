{"id":"../node_modules/baseui/styles/util.js","dependencies":[{"name":"/home/nii236/git/saas-sim/web/package.json","includedInParent":true,"mtime":1568424142360},{"name":"/home/nii236/git/saas-sim/web/.babelrc","includedInParent":true,"mtime":1568421471533},{"name":"/home/nii236/git/saas-sim/web/node_modules/baseui/package.json","includedInParent":true,"mtime":1568421606605}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToRgb = hexToRgb;\nexports.ellipsisText = void 0;\n\n/*\nCopyright (c) 2018-2019 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nfunction hexToRgb() {\n  var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? \"rgba(\".concat(parseInt(result[1], 16), \", \").concat(parseInt(result[2], 16), \", \").concat(parseInt(result[3], 16), \", \").concat(alpha, \")\") : null;\n}\n\nvar ellipsisText = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  wordWrap: 'normal'\n};\nexports.ellipsisText = ellipsisText;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/baseui/styles/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/baseui/styles/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../node_modules/baseui/styles/util.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToRgb = hexToRgb;\nexports.ellipsisText = void 0;\n\n/*\nCopyright (c) 2018-2019 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nfunction hexToRgb() {\n  var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? \"rgba(\".concat(parseInt(result[1], 16), \", \").concat(parseInt(result[2], 16), \", \").concat(parseInt(result[3], 16), \", \").concat(alpha, \")\") : null;\n}\n\nvar ellipsisText = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  wordWrap: 'normal'\n};\nexports.ellipsisText = ellipsisText;"},"lineCount":32}},"error":null,"hash":"5b2d0a88aa616e0dbebb330c3ba50d89","cacheData":{"env":{}}}